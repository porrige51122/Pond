{"version":3,"sources":["webpack:///webpack/bootstrap","webpack:///./src/colours.js","webpack:///./src/background/plants/longGrass.js","webpack:///./src/movement/movement.js","webpack:///./src/pond.js","webpack:///./src/background/background.js","webpack:///./src/background/rock.js","webpack:///./src/background/plants/cattail.js","webpack:///./src/background/plants/tree.js","webpack:///./src/background/plants/lobeliaCardinalis.js","webpack:///./src/background/plants/flowerBush.js","webpack:///./src/background/plants/irisEnsataVariegata.js","webpack:///./src/creature/tadpole.js","webpack:///./src/creature/fish.js","webpack:///./src/creature/lily.js","webpack:///./src/movement/water/water.js","webpack:///./src/movement/water/ripple.js","webpack:///./src/movement/collisions.js","webpack:///./src/movement/tadMovement.js","webpack:///./src/movement/fishMovement.js","webpack:///./src/movement/lilyMovement.js"],"names":["installedModules","__webpack_require__","moduleId","exports","module","i","l","modules","call","m","c","d","name","getter","o","Object","defineProperty","enumerable","get","r","Symbol","toStringTag","value","t","mode","__esModule","ns","create","key","bind","n","object","property","prototype","hasOwnProperty","p","s","ocean_blue","deep_blue","pond_shadow","yellow","orange_peel","bark","khaki","olive","forest_green","dark_green","pea","yellow_green","light_green","lily_green","pink","leaf_brown","delicate_pink","light_pink","purple","indigo","registration_black","rasin_black","dark_gray","rock_gray","gray","_colours","LongGrass","canvas","ctx","size","_classCallCheck","this","pos","w","h","rotation","Math","random","PI","save","translate","rotate","beginPath","fillStyle","colours","moveTo","bezierCurveTo","fill","strokeStyle","stroke","restore","Movement","entities","collisions","index","spacing","smoothing","width","height","velx","vely","prevVel","vel","entity","limit","Pond","water","Water","eventListeners","resize","init","loop","_this","hide","document","getElementById","refresh","hidden","screenRatio","addEventListener","e","x","target","checked","style","display","tadpoleSize","fishSize","lilySize","mousemovecount","dropAt","event","clientX","clientY","_this2","background","Background","setBackground","tadpoles","fish","lillies","movement","push","Tadpole","forEach","tad","getLeader","leader","Fish","Lily","Collisions","TadMovement","FishMovement","LilyMovement","_this3","window","requestAnimationFrame","tick","render","_this4","move","f","renderPond","renderLand","innerWidth","innerHeight","require","getContext","pondColour","landColour","createLand","canvasB","createElement","ctxB","fillRect","globalCompositeOperation","arc","grassCount","aroundPond","edgeOfPond","Rock","ceil","FlowerBush","Cattail","Tree","count","surrounded","angle","cos","y","sin","dis","sqrt","pow","setPos","pondEdge","isColliding","drawImage","dxa","dya","dxb","dyb","lenA","lenB","circPos","length","nextPoint","pop","generatePoints","points","a","lineTo","drawLines","b","stemLength","stemThickness","stemColour","headLength","headThickness","headColour","tipLength","tipThickness","tipColour","drawLine","start","thickness","colour","lineCap","lineWidth","drawTree","dx","dy","drawBranch","drawSakuraLeaf","LobeliaCardinalis","flower","IrisEnsataVariegata","drawBush","drawPetal","drawInnerPetal","follow","eagerness","leaders","floor","colourA","colourB","createRadialGradient","addColorStop","swimming","angles","left","atan2","shift","drawfish","offsetArr","shadow","offset","fishShape","startAngle","clockwise","isFlower","drawFlower","drawRing","_ripple","ripples","splice","vx","arguments","undefined","vy","Ripple","maxSize","len","j","_movement","_possibleConstructorReturn","__proto__","getPrototypeOf","edgeCheck","leaderPos","disX","disY","slowing","checkTadpoles","reduce","checkFish","velX","velY","checkLillies"],"mappings":"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","file":"./js/pond.bundle.js","sourcesContent":[" \t// The module cache\n \tvar installedModules = {};\n\n \t// The require function\n \tfunction __webpack_require__(moduleId) {\n\n \t\t// Check if module is in cache\n \t\tif(installedModules[moduleId]) {\n \t\t\treturn installedModules[moduleId].exports;\n \t\t}\n \t\t// Create a new module (and put it into the cache)\n \t\tvar module = installedModules[moduleId] = {\n \t\t\ti: moduleId,\n \t\t\tl: false,\n \t\t\texports: {}\n \t\t};\n\n \t\t// Execute the module function\n \t\tmodules[moduleId].call(module.exports, module, module.exports, __webpack_require__);\n\n \t\t// Flag the module as loaded\n \t\tmodule.l = true;\n\n \t\t// Return the exports of the module\n \t\treturn module.exports;\n \t}\n\n\n \t// expose the modules object (__webpack_modules__)\n \t__webpack_require__.m = modules;\n\n \t// expose the module cache\n \t__webpack_require__.c = installedModules;\n\n \t// define getter function for harmony exports\n \t__webpack_require__.d = function(exports, name, getter) {\n \t\tif(!__webpack_require__.o(exports, name)) {\n \t\t\tObject.defineProperty(exports, name, { enumerable: true, get: getter });\n \t\t}\n \t};\n\n \t// define __esModule on exports\n \t__webpack_require__.r = function(exports) {\n \t\tif(typeof Symbol !== 'undefined' && Symbol.toStringTag) {\n \t\t\tObject.defineProperty(exports, Symbol.toStringTag, { value: 'Module' });\n \t\t}\n \t\tObject.defineProperty(exports, '__esModule', { value: true });\n \t};\n\n \t// create a fake namespace object\n \t// mode & 1: value is a module id, require it\n \t// mode & 2: merge all properties of value into the ns\n \t// mode & 4: return value when already ns object\n \t// mode & 8|1: behave like require\n \t__webpack_require__.t = function(value, mode) {\n \t\tif(mode & 1) value = __webpack_require__(value);\n \t\tif(mode & 8) return value;\n \t\tif((mode & 4) && typeof value === 'object' && value && value.__esModule) return value;\n \t\tvar ns = Object.create(null);\n \t\t__webpack_require__.r(ns);\n \t\tObject.defineProperty(ns, 'default', { enumerable: true, value: value });\n \t\tif(mode & 2 && typeof value != 'string') for(var key in value) __webpack_require__.d(ns, key, function(key) { return value[key]; }.bind(null, key));\n \t\treturn ns;\n \t};\n\n \t// getDefaultExport function for compatibility with non-harmony modules\n \t__webpack_require__.n = function(module) {\n \t\tvar getter = module && module.__esModule ?\n \t\t\tfunction getDefault() { return module['default']; } :\n \t\t\tfunction getModuleExports() { return module; };\n \t\t__webpack_require__.d(getter, 'a', getter);\n \t\treturn getter;\n \t};\n\n \t// Object.prototype.hasOwnProperty.call\n \t__webpack_require__.o = function(object, property) { return Object.prototype.hasOwnProperty.call(object, property); };\n\n \t// __webpack_public_path__\n \t__webpack_require__.p = \"\";\n\n\n \t// Load entry module and return exports\n \treturn __webpack_require__(__webpack_require__.s = 3);\n","export default {\r\n  // Daytime\r\n  ocean_blue: '#94D0FF',\r\n  deep_blue: 'rgba(135,149,232,0.7)',\r\n  pond_shadow: 'rgba(11, 45, 99, 0.7)',\r\n  yellow: '#fdf3b8',\r\n  orange_peel: '#FCC08F',\r\n  bark: '#917e7e',\r\n  khaki: '#F0E68C',\r\n  olive: '#808000',\r\n  forest_green: '#68BA71',\r\n  dark_green: '#388941',\r\n  pea: '#60A568',\r\n  yellow_green: '#acff78',\r\n  light_green: '#90ee90',\r\n  lily_green: '#B4E8AC',\r\n  pink: '#FF6AD5',\r\n  leaf_brown: '#ecb4bf',\r\n  delicate_pink: '#FF9BE2',\r\n  light_pink: '#FFBCEC',\r\n  purple: '#9370DB',\r\n  indigo: '#4B0082',\r\n  registration_black: '#000000',\r\n  rasin_black: '#212121',\r\n  dark_gray: '#474747',\r\n  rock_gray: '#606060',\r\n  gray: '#808080'\r\n};\r\n","import colours from '../../colours';\r\n\r\nclass LongGrass {\r\n  constructor(canvas, ctx, size) {\r\n    this.canvas = canvas;\r\n    this.ctx = ctx;\r\n    this.size = size;\r\n  }\r\n\r\n  setPos(pos) {\r\n    this.pos = pos;\r\n  }\r\n\r\n  render() {\r\n    let w = this.size/40;\r\n    let h = w * 6;\r\n    let rotation = Math.random() * Math.PI;\r\n    this.ctx.save();\r\n    this.ctx.translate(this.pos[0], this.pos[1]);\r\n    this.ctx.rotate(rotation);\r\n    this.ctx.beginPath();\r\n    this.ctx.fillStyle = colours.forest_green;\r\n    this.ctx.moveTo(0, - h / 2);\r\n    this.ctx.bezierCurveTo(w / 2, - h / 2, w / 2, h / 2, 0, h / 2);\r\n    this.ctx.bezierCurveTo(- w / 2, h / 2, - w / 2, - h / 2, 0, - h / 2);\r\n    this.ctx.fill();\r\n    this.ctx.beginPath();\r\n    this.ctx.strokeStyle = colours.dark_green;\r\n    this.ctx.moveTo(0, - h / 2);\r\n    this.ctx.bezierCurveTo(w / 2, - h / 2, w / 2, h / 2, 0, h / 2);\r\n    this.ctx.bezierCurveTo(- w / 2, h / 2, - w / 2, - h / 2, 0, - h / 2);\r\n    this.ctx.stroke();\r\n    this.ctx.restore();\r\n  }\r\n\r\n}\r\n\r\nexport default LongGrass;\r\n","/*\r\n * MOVEMENT ABSTRACT CLASS\r\n * contains all universal movement methods\r\n */\r\n\r\nclass Movement {\r\n  constructor(entities, canvas, collisions) {\r\n    this.canvas = canvas;\r\n    this.entities = entities;\r\n    this.collisions = collisions;\r\n  }\r\n\r\n  move() {}\r\n\r\n  /*\r\n   * EDGECHECK - checks to see if entity is off the edge of the canvas\r\n   * If so moves the entity back onto the canvas\r\n   */\r\n  edgeCheck(index, pos) {\r\n    if (pos[0] < 0 + this.spacing) {\r\n      this.smoothing(index, 1, 0);\r\n    } else if (pos[1] < 0 + this.spacing) {\r\n      this.smoothing(index, 0, 1);\r\n    } else if (pos[0] > this.canvas.width - (this.spacing * 2)) {\r\n      this.smoothing(index, -1, 0);\r\n    } else if (pos[1] > this.canvas.height - (this.spacing * 2)) {\r\n      this.smoothing(index, 0, -1);\r\n    }\r\n  }\r\n\r\n  /*\r\n   * SMOOTHING - Changes the velocity slightly to make movement smoother\r\n   */\r\n  smoothing(index, velx, vely) {\r\n    let smoothing = 0.005;\r\n    let prevVel = this.entities[index].vel;\r\n    this.entities[index].vel = [prevVel[0] + velx * smoothing,\r\n                                prevVel[1] + vely * smoothing];\r\n  }\r\n\r\n  /*\r\n   * SLOWING - Reduces the velocity to the limit so the entity does not go\r\n   * too fast\r\n   */\r\n  slowing(entity, limit) {\r\n    let prevVel = this.entities[entity].vel;\r\n    if (prevVel[0] > limit)\r\n      prevVel[0] = limit;\r\n    else if (prevVel[0] < -limit)\r\n      prevVel[0] = -limit;\r\n\r\n    if (prevVel[1] > limit)\r\n      prevVel[1] = limit;\r\n    else if (prevVel[1] < -limit)\r\n      prevVel[1] = -limit;\r\n\r\n    this.entities[entity].vel = prevVel;\r\n  }\r\n\r\n}\r\n\r\nexport default Movement;\r\n","/**\r\n * POND: This is the controller of the entire program, this is where\r\n * the program loop is run, containing: render, tick and resize.\r\n */\r\n\r\nimport Background from './background/background';\r\n\r\nimport Tadpole from './creature/tadpole';\r\nimport Fish from './creature/fish';\r\nimport Lily from './creature/lily';\r\n\r\nimport Water from './movement/water/water';\r\nimport Collisions from './movement/collisions';\r\nimport TadMovement from './movement/tadMovement';\r\nimport FishMovement from './movement/fishMovement';\r\nimport LilyMovement from './movement/lilyMovement';\r\n\r\n\r\nclass Pond {\r\n  constructor(canvas, ctx) {\r\n    this.canvas = canvas;\r\n    this.ctx = ctx;\r\n\r\n    this.water = new Water(canvas, ctx);\r\n\r\n    this.eventListeners();\r\n    this.resize();\r\n    this.init();\r\n    this.loop();\r\n  }\r\n\r\n  /**\r\n   * HTML canvas elements are initiated here and event listeners\r\n   * are created\r\n   */\r\n  eventListeners() {\r\n    const hide = document.getElementById('hidecheck');\r\n    const refresh = document.getElementById('refresh');\r\n\r\n    this.hidden = false;\r\n    this.screenRatio = 3/4;\r\n    hide.addEventListener('change', e => {\r\n      let x = document.getElementById('selections');\r\n      if (e.target.checked) {\r\n        x.style.display = \"none\";\r\n      } else {\r\n        x.style.display = \"block\";\r\n      }\r\n    });\r\n\r\n    // Initialise the variables\r\n    this.tadpoleSize = document.getElementById('tadpoles').value;\r\n    this.fishSize = document.getElementById('fish').value;\r\n    this.lilySize = document.getElementById('lillies').value;\r\n\r\n    refresh.addEventListener('mouseup', e => {\r\n      this.tadpoleSize = document.getElementById('tadpoles').value;\r\n      this.fishSize = document.getElementById('fish').value;\r\n      this.lilySize = document.getElementById('lillies').value;\r\n      this.init();\r\n    });\r\n    let mousemovecount = 0;\r\n    canvas.addEventListener(\"mousemove\", () => {\r\n      mousemovecount++;\r\n      if (mousemovecount % 4 == 0) {\r\n        this.water.dropAt(event.clientX, event.clientY);\r\n      }\r\n    });\r\n  }\r\n\r\n  /**\r\n   * All entities are added to their arrays and ther corresponding\r\n   * Movements are initiated\r\n   */\r\n  init() {\r\n    this.background = new Background(canvas, ctx);\r\n    this.water.setBackground(this.background);\r\n    let size = this.background.size;\r\n\r\n    this.tadpoles = [];\r\n    this.fish = [];\r\n    this.lillies = [];\r\n    this.movement = [];\r\n\r\n    // Pushes all tadpoles to their array and sets the first one as\r\n    // leader in case there are no tadpole leaders.\r\n    for (let i = 0; i < this.tadpoleSize; i++)\r\n      this.tadpoles.push(new Tadpole(canvas, size));\r\n    this.tadpoles.forEach((tad) => tad.getLeader(this.tadpoles));\r\n    this.tadpoles[0].leader = true;\r\n\r\n    // Pushes all fish and lillies to their arrays\r\n    for (let i = 0; i < this.fishSize; i++)\r\n      this.fish.push(new Fish(canvas, ctx, size));\r\n\r\n    for (let i = 0; i < this.lilySize; i++)\r\n      this.lillies.push(new Lily(canvas, size));\r\n\r\n    // Sets movement patterns for all entities\r\n    this.collisions = new Collisions(this.tadpoles, this.fish, this.lillies, this.background);\r\n\r\n    this.movement.push(new TadMovement(this.tadpoles, canvas, this.collisions),\r\n                      new FishMovement(this.fish, canvas, this.collisions),\r\n                      new LilyMovement(this.lillies, canvas, this.collisions));\r\n  }\r\n\r\n  loop() {\r\n    window.requestAnimationFrame(() => {\r\n      this.resize();\r\n      this.tick();\r\n      this.render();\r\n      this.loop();\r\n    });\r\n  }\r\n\r\n  /**\r\n   * All tick functions are run for all the movements and for each\r\n   * entity\r\n   */\r\n  tick() {\r\n    this.movement.forEach((m) => m.move(this.water));\r\n    this.tadpoles.forEach((t) => t.tick());\r\n    this.fish.forEach((f) => f.tick());\r\n    this.water.tick();\r\n    this.lillies.forEach((l) => l.tick());\r\n  }\r\n\r\n  /**\r\n   * All render functions are run for all entities\r\n   */\r\n  render() {\r\n    // Clear screen\r\n    this.background.renderPond(canvas, ctx);\r\n\r\n    // Draw to canvas in order of layers\r\n    this.tadpoles.forEach((t) => t.render(canvas, ctx));\r\n    this.fish.forEach((f) => f.render(canvas, ctx));\r\n    this.water.render();\r\n    this.lillies.forEach((l) => l.render(canvas, ctx));\r\n\r\n    // Draw the land on the canvas\r\n    this.background.renderLand(canvas, ctx);\r\n  }\r\n\r\n  /**\r\n   * This is run every frame loop but only gets past the if statement\r\n   * if the window size has changed\r\n   */\r\n  resize() {\r\n    if (canvas.width != window.innerWidth || canvas.height != window.innerHeight) {\r\n      canvas.width = window.innerWidth;\r\n      canvas.height = window.innerHeight;\r\n      this.water.resize();\r\n      this.tadpoleSize = document.getElementById('tadpoles').value;\r\n      this.fishSize = document.getElementById('fish').value;\r\n      this.lilySize = document.getElementById('lillies').value;\r\n      this.init();\r\n    }\r\n  }\r\n\r\n}\r\n\r\nrequire('./mystyles.scss');\r\nconst canvas = document.getElementById(\"myCanvas\");\r\nconst ctx = canvas.getContext(\"2d\");\r\nlet pond = new Pond(canvas, ctx);\r\n","import colours from '../colours';\r\nimport Rock from './rock';\r\nimport Cattail from './plants/cattail';\r\nimport LongGrass from './plants/longGrass';\r\nimport Tree from './plants/tree';\r\nimport LobeliaCardinalis from './plants/lobeliaCardinalis';\r\nimport FlowerBush from './plants/flowerBush';\r\n\r\n/**\r\n * BACKGROUND:\r\n * This class creates the bank of the pond and checks to see if fish are\r\n * colliding with it\r\n */\r\nclass Background {\r\n  constructor(canvas, ctx) {\r\n    if (canvas.width < canvas.height) {\r\n      this.pos = [canvas.width/2, (canvas.height/8) * 3,\r\n                  canvas.width/2, (canvas.height/8) * 5];\r\n      this.size = canvas.width/2;\r\n    } else {\r\n      this.pos = [(canvas.width/8) * 3, canvas.height/2,\r\n                  (canvas.width/8) * 5, canvas.height/2];\r\n      this.size = canvas.height/2;\r\n    }\r\n    this.pondColour = colours.ocean_blue;\r\n    this.landColour = colours.pea;\r\n    this.createLand(canvas, ctx);\r\n\r\n  }\r\n\r\n  createLand(canvas, ctx) {\r\n    // Create a mask and cuts 2 circles out of it then draws it to the canvas\r\n    this.canvasB = document.createElement('canvas');\r\n    this.canvasB.width = canvas.width;\r\n    this.canvasB.height = canvas.height;\r\n    let ctxB = this.canvasB.getContext('2d');\r\n    ctxB.save();\r\n    ctxB.fillStyle = this.landColour;\r\n    ctxB.fillRect(0, 0, canvas.width, canvas.height);\r\n    ctxB.globalCompositeOperation = 'xor';\r\n    ctxB.arc(this.pos[0], this.pos[1], this.size, 0, Math.PI * 2);\r\n    ctxB.arc(this.pos[2], this.pos[3], this.size, 0, Math.PI * 2);\r\n    ctxB.fill();\r\n    ctxB.restore();\r\n\r\n    // Draw grassCount number of grass on pond bank\r\n    let grassCount = this.size * 5;\r\n    this.aroundPond(grassCount, new LongGrass(this.canvasB, ctxB, this.size));\r\n    // Draw rockCount number of rocks around Pond\r\n    let rockCount = 100;\r\n    this.edgeOfPond(rockCount, new Rock(this.canvasB, ctxB, this.size));\r\n    // 25% chance to draw stepping stones\r\n    // TODO: Draw Stepping stones\r\n\r\n    // Draw Flowers\r\n    this.aroundPond(Math.ceil(Math.random() * this.size/80), new FlowerBush(this.canvasB, ctxB, this.size));\r\n\r\n    // Draw cattailCount number of cattails around pond\r\n    let cattailCount = 30;\r\n    this.edgeOfPond(cattailCount, new Cattail(this.canvasB, ctxB, this.size));\r\n    // 75% chance of tree around pond\r\n    if (Math.random() < 0.75) {\r\n      this.aroundPond(1, new Tree(this.canvasB, ctxB, this.size));\r\n    }\r\n  }\r\n\r\n\r\n  edgeOfPond(count, entity) {\r\n    let surrounded = true;\r\n    let angle = 0;\r\n\r\n    while (surrounded) {\r\n      let x = this.size * Math.cos(angle) + this.pos[0];\r\n      let y = this.size * Math.sin(angle) + this.pos[1];\r\n      let pos = [x, y];\r\n      let dis = Math.sqrt(Math.pow(x - this.pos[2], 2) + Math.pow(y - this.pos[3], 2));\r\n      if (dis > this.size) {\r\n        entity.setPos(pos);\r\n        entity.render();\r\n      }\r\n\r\n      x += this.pos[2] - this.pos[0];\r\n      y += this.pos[3] - this.pos[1];\r\n      pos = [x, y];\r\n      dis = Math.sqrt(Math.pow(x - this.pos[0], 2) + Math.pow(y - this.pos[1], 2));\r\n      if (dis > this.size) {\r\n        entity.setPos(pos);\r\n        entity.render();\r\n      }\r\n      if (angle > count * 25)\r\n        surrounded = false;\r\n      else\r\n        angle += Math.random() * 50;\r\n    }\r\n  }\r\n\r\n  aroundPond(count, entity) {\r\n    for (let i = 0; i < count; i++) {\r\n      let pondEdge = false;\r\n      let pos;\r\n      while (!pondEdge) {\r\n        pos = [Math.random() * entity.canvas.width, Math.random() * entity.canvas.height];\r\n        if (this.isColliding(pos) != null) {\r\n          pondEdge = true;\r\n        }\r\n      }\r\n      entity.setPos(pos);\r\n      entity.render();\r\n    }\r\n  }\r\n\r\n  withinPond(count, entity) {\r\n    // TODO: Code to put all entities within the pond\r\n  }\r\n\r\n  renderPond(canvas, ctx) {\r\n    ctx.fillStyle = this.pondColour;\r\n    ctx.fillRect(0, 0, canvas.width, canvas.height);\r\n  }\r\n\r\n  // Draws loaded template\r\n  renderLand(canvas, ctx) {\r\n    ctx.drawImage(this.canvasB, 0, 0);\r\n  }\r\n\r\n  isColliding(pos) {\r\n    // Calculate if the object will collide with the wall\r\n    let dxa = pos[0] - this.pos[0];\r\n    let dya = pos[1] - this.pos[1];\r\n    let dxb = pos[0] - this.pos[2];\r\n    let dyb = pos[1] - this.pos[3];\r\n    let lenA = Math.sqrt(Math.pow(dxa, 2) + Math.pow(dya, 2));\r\n    let lenB = Math.sqrt(Math.pow(dxb, 2) + Math.pow(dyb, 2));\r\n    if (lenA < this.size || lenB < this.size) {\r\n      return null;\r\n    }\r\n    // return collision info here\r\n    if (lenB > lenA) {\r\n      return [this.pos[0], this.pos[1]];\r\n    } else {\r\n      return [this.pos[2], this.pos[3]];\r\n    }\r\n  }\r\n}\r\n\r\nexport default Background;\r\n","import colours from '../colours';\r\n\r\nclass Rock {\r\n  constructor(canvas, ctx, size) {\r\n    this.canvas = canvas;\r\n    this.ctx = ctx;\r\n    this.size = size;\r\n  }\r\n\r\n  setPos(pos) {\r\n    this.pos = pos;\r\n  }\r\n\r\n  generatePoints() {\r\n    let pointCountAvg = 8;\r\n    this.circPos = [((360/pointCountAvg) * Math.random() * 2)];\r\n    while (this.circPos[this.circPos.length - 1] < 360) {\r\n      let nextPoint = this.circPos[this.circPos.length - 1] + (360/pointCountAvg/2) + (360/pointCountAvg/2) * Math.random() * 2;\r\n      this.circPos.push(nextPoint);\r\n    }\r\n    this.circPos.pop();\r\n  }\r\n\r\n  render() {\r\n    this.generatePoints();\r\n    let size = this.size/20 + this.size/20 * Math.random();\r\n    let points = [];\r\n    for (let a = 0; a < this.circPos.length; a++) {\r\n      let x = size * Math.cos(this.circPos[a] * (Math.PI/180)) + this.pos[0];\r\n      let y = size * Math.sin(this.circPos[a] * (Math.PI/180)) + this.pos[1];\r\n      points.push([x,y]);\r\n      x = size*5/8 * Math.cos(this.circPos[a] * (Math.PI/180)) + this.pos[0];\r\n      y = size*5/8 * Math.sin(this.circPos[a] * (Math.PI/180)) + this.pos[1];\r\n      points.push([x,y]);\r\n    }\r\n\r\n    this.ctx.beginPath();\r\n    this.ctx.fillStyle = colours.rock_gray;\r\n    this.ctx.moveTo(points[0][0], points[0][1]);\r\n    for (let a = 2; a < points.length; a+= 2)\r\n      this.ctx.lineTo(points[a][0], points[a][1]);\r\n    this.ctx.fill();\r\n\r\n    this.ctx.beginPath();\r\n    this.ctx.fillStyle = colours.gray;\r\n    this.ctx.moveTo(points[1][0], points[1][1]);\r\n    for (let a = 1; a < points.length; a+= 2)\r\n      this.ctx.lineTo(points[a][0], points[a][1]);\r\n    this.ctx.fill();\r\n\r\n    for (let a = 0; a < points.length - 2; a+= 2) {\r\n      this.drawLines(points[a], points[a+1], points[a+2], points[a+3]);\r\n    }\r\n    this.drawLines(points[points.length-2], points[points.length-1], points[0], points[1]);\r\n  }\r\n\r\n  drawLines(a, b, c, d) {\r\n    this.ctx.beginPath();\r\n    this.ctx.strokeStyle = colours.dark_gray;\r\n    this.ctx.moveTo(a[0], a[1]);\r\n    this.ctx.lineTo(b[0], b[1]);\r\n    this.ctx.lineTo(d[0], d[1]);\r\n    this.ctx.lineTo(c[0], c[1]);\r\n    this.ctx.lineTo(a[0], a[1]);\r\n    this.ctx.stroke();\r\n  }\r\n\r\n}\r\n\r\nexport default Rock;\r\n","import colours from '../../colours';\r\n\r\n/**\r\n * CATTAIL class\r\n * Draws a cattail of a random angle at a position on the canvas\r\n */\r\nclass Cattail {\r\n  constructor(canvas, ctx, size) {\r\n    this.canvas = canvas;\r\n    this.ctx = ctx;\r\n    this.size = size/2 + size/2 * Math.random();\r\n  }\r\n\r\n  setPos(pos) {\r\n    this.pos = pos;\r\n  }\r\n\r\n  render() {\r\n    let length = Math.random();\r\n    let stemLength = this.size/8 * length;\r\n    let stemThickness = this.size/64;\r\n    let stemColour = colours.dark_green;\r\n    let headLength = this.size/15 * length;\r\n    let headThickness = this.size/20;\r\n    let headColour = colours.olive;\r\n    let tipLength = this.size/40 * length;\r\n    let tipThickness = this.size/120;\r\n    let tipColour = colours.khaki;\r\n    let rotation = Math.random() * 2 * Math.PI;\r\n\r\n    this.ctx.save();\r\n    this.ctx.translate(this.pos[0], this.pos[1]);\r\n    this.ctx.rotate(rotation);\r\n    this.drawLine(0, stemLength, stemThickness, stemColour);\r\n    this.drawLine(stemLength + stemThickness, headLength, headThickness, headColour);\r\n    this.drawLine(stemLength + stemThickness + headLength, tipLength, tipThickness, tipColour);\r\n    this.ctx.restore();\r\n  }\r\n\r\n  drawLine(start, length, thickness, colour) {\r\n    this.ctx.beginPath();\r\n    this.ctx.lineCap = \"round\";\r\n    this.ctx.strokeStyle = colour;\r\n    this.ctx.lineWidth = thickness;\r\n    this.ctx.moveTo(0, start);\r\n    this.ctx.lineTo(0, length + start);\r\n    this.ctx.stroke();\r\n  }\r\n\r\n}\r\n\r\nexport default Cattail;\r\n","import colours from '../../colours';\r\n\r\nclass Tree {\r\n  constructor(canvas, ctx, size) {\r\n    this.canvas = canvas;\r\n    this.ctx = ctx;\r\n    this.size = size;\r\n  }\r\n\r\n  setPos(pos) {\r\n    this.pos = pos;\r\n  }\r\n\r\n  render() {\r\n    // Change for initial thickness\r\n    let w = this.size/20;\r\n\r\n    this.ctx.save();\r\n    this.ctx.translate(this.pos[0], this.pos[1]);\r\n    for (let i = 0; i < Math.PI * 2; i += Math.PI/8) {\r\n      this.ctx.rotate(i);\r\n      this.drawTree(0, 0, w);\r\n    }\r\n    // this.drawLeaf(0,0,this.size/200);\r\n    this.ctx.restore();\r\n\r\n  }\r\n\r\n  drawTree(x, y, w) {\r\n    for (let i = 0; i < 2; i++) {\r\n      // Change the amount for spread of the tree\r\n      let dx = Math.random() * this.size/7;\r\n      let dy = Math.random() * this.size/7;\r\n      this.drawBranch(x, y, dx, dy, w);\r\n      // Change for minimum branch thickness\r\n      if (w > this.size/80) {\r\n        // Change w amount for change in thickness\r\n        this.drawTree(x + dx, y + dy, w/1.75);\r\n      }\r\n      this.ctx.fillStyle = colours.leaf_brown;\r\n      this.drawSakuraLeaf(x + dx, y + dy, this.size/200);\r\n    }\r\n\r\n  }\r\n\r\n  drawSakuraLeaf(x, y, w) {\r\n    this.ctx.beginPath();\r\n    this.ctx.moveTo(x, y);\r\n    this.ctx.bezierCurveTo(x - (4 * w), y     , x - (4 * w), y     , x - (8 * w), y - (2 * w));\r\n    this.ctx.bezierCurveTo(x - (4 * w), y - (2 * w), x - (4 * w), y - (2 * w), x     , y     );\r\n\r\n    this.ctx.bezierCurveTo(x + (4 * w), y     , x + (4 * w), y     , x + (8 * w), y - (2 * w));\r\n    this.ctx.bezierCurveTo(x + (4 * w), y - (2 * w), x + (4 * w), y - (2 * w), x     , y     );\r\n\r\n    this.ctx.bezierCurveTo(x - (6 * w), y     , x - (6 * w), y     , x - (12 * w), y + (4 * w));\r\n    this.ctx.bezierCurveTo(x - (6 * w), y + (4 * w), x - (6 * w), y + (4 * w), x     , y     );\r\n\r\n    this.ctx.bezierCurveTo(x + (6 * w), y     , x + (6 * w), y     , x + (12 * w), y + (4 * w));\r\n    this.ctx.bezierCurveTo(x + (6 * w), y + (4 * w), x + (6 * w), y + (4 * w), x     , y     );\r\n\r\n    this.ctx.bezierCurveTo(x - (3 * w), y + (7 * w), x - (3 * w), y + (7 * w), x - (10 * w), y + (12 * w));\r\n    this.ctx.bezierCurveTo(x - (6 * w), y + (5 * w), x - (8 * w), y + (5 * w), x     , y     );\r\n\r\n    this.ctx.bezierCurveTo(x + (3 * w), y + (7 * w), x + (3 * w), y + (7 * w), x + (10 * w), y + (12 * w));\r\n    this.ctx.bezierCurveTo(x + (6 * w), y + (5 * w), x + (8 * w), y + (5 * w), x     , y     );\r\n\r\n    this.ctx.bezierCurveTo(x - (3 * w), y + (9 * w), x - (3 * w), y + (9 * w), x     , y + (18 * w));\r\n    this.ctx.bezierCurveTo(x + (3 * w), y + (9 * w), x + (3 * w), y + (9 * w), x     , y     );\r\n\r\n    this.ctx.fill();\r\n  }\r\n\r\n  drawBranch(x, y, dx, dy, w) {\r\n    this.ctx.beginPath();\r\n    this.ctx.lineWidth = w;\r\n    this.ctx.lineCap = \"round\";\r\n    this.ctx.strokeStyle = colours.bark;\r\n    this.ctx.moveTo(x, y);\r\n    this.ctx.lineTo(x + dx, y + dy);\r\n    this.ctx.stroke();\r\n  }\r\n\r\n}\r\n\r\nexport default Tree;\r\n","import colours from '../../colours';\r\n\r\nclass LobeliaCardinalis {\r\n  constructor(canvas, ctx, size) {\r\n    this.canvas = canvas;\r\n    this.ctx = ctx;\r\n    this.size = size;\r\n  }\r\n\r\n  setPos(pos) {\r\n    this.pos = pos;\r\n  }\r\n\r\n  render() {\r\n\r\n  }\r\n}\r\n\r\nexport default LobeliaCardinalis;\r\n","import colours from '../../colours';\r\nimport LongGrass from './longGrass';\r\nimport IrisEnsataVariegata  from './irisEnsataVariegata';\r\n\r\nclass FlowerBush {\r\n  constructor(canvas, ctx, size) {\r\n    this.canvas = canvas;\r\n    this.ctx = ctx;\r\n    this.size = size;\r\n  }\r\n\r\n  setPos(pos) {\r\n    this.pos = pos;\r\n  }\r\n  // ctx.save pushes current state onto stack therefore\r\n  // multiple saves can be used to minimize code\r\n  render() {\r\n    let s = this.size/15;\r\n    let flower = new IrisEnsataVariegata(this.canvas, this.ctx, this.size);\r\n    let x = this.pos[0];\r\n    let y = this.pos[1];\r\n\r\n    this.drawBush(x, y)\r\n\r\n    flower.setPos([0, 0]);\r\n    this.ctx.save();\r\n\r\n    this.ctx.translate(x, y);\r\n    this.ctx.save();\r\n    this.ctx.rotate(Math.random() * 2 * Math.PI);\r\n    flower.render();\r\n    this.ctx.restore();\r\n    this.ctx.translate(0, s * 1.2);\r\n    this.ctx.save();\r\n    this.ctx.rotate(Math.random() * 2 * Math.PI);\r\n    flower.render();\r\n    this.ctx.restore();\r\n    this.ctx.translate(-s, - (2 * s));\r\n    this.ctx.save();\r\n    this.ctx.rotate(Math.random() * 2 * Math.PI);\r\n    flower.render();\r\n    this.ctx.restore();\r\n    this.ctx.translate((2 * s), 0);\r\n    this.ctx.rotate(Math.random() * 2 * Math.PI);\r\n    flower.render();\r\n\r\n    this.ctx.restore();\r\n\r\n  }\r\n\r\n  drawBush(x, y) {\r\n    let w = this.size/20;\r\n    let h = w * 6;\r\n    this.ctx.save();\r\n    this.ctx.translate(x, y);\r\n\r\n    for (let i = 0; i < Math.PI; i += Math.PI/10) {\r\n      this.ctx.save();\r\n      this.ctx.rotate(i);\r\n      this.ctx.beginPath();\r\n      this.ctx.fillStyle = colours.forest_green;\r\n      this.ctx.moveTo(0, - h / 2);\r\n      this.ctx.bezierCurveTo(w / 2, - h / 2, w / 2, h / 2, 0, h / 2);\r\n      this.ctx.bezierCurveTo(- w / 2, h / 2, - w / 2, - h / 2, 0, - h / 2);\r\n      this.ctx.fill();\r\n      this.ctx.beginPath();\r\n      this.ctx.strokeStyle = colours.yellow_green;\r\n      this.ctx.moveTo(0, - h / 2);\r\n      this.ctx.bezierCurveTo(w / 2, - h / 2, w / 2, h / 2, 0, h / 2);\r\n      this.ctx.bezierCurveTo(- w / 2, h / 2, - w / 2, - h / 2, 0, - h / 2);\r\n      this.ctx.stroke();\r\n      this.ctx.restore();\r\n    }\r\n    this.ctx.restore();\r\n  }\r\n}\r\n\r\nexport default FlowerBush;\r\n","import colours from '../../colours';\r\nimport LongGrass from './longGrass';\r\n\r\nclass IrisEnsataVariegata {\r\n  constructor(canvas, ctx, size) {\r\n    this.canvas = canvas;\r\n    this.ctx = ctx;\r\n    this.size = size/180;\r\n  }\r\n\r\n  setPos(pos) {\r\n    this.pos = pos;\r\n  }\r\n\r\n  render() {\r\n    let x = this.pos[0];\r\n    let y = this.pos[1];\r\n    for (let i = 0; i <= 2 * Math.PI; i+=(2/3) * Math.PI) {\r\n      this.ctx.save();\r\n      this.ctx.translate(x, y);\r\n      this.ctx.rotate(i);\r\n\r\n      this.ctx.beginPath();\r\n      this.ctx.fillStyle = colours.purple;\r\n      this.drawPetal(0, -this.size/2);\r\n      this.ctx.fill();\r\n      this.ctx.beginPath();\r\n      this.ctx.strokeStyle = colours.indigo;\r\n      this.drawPetal(0, -this.size/2);\r\n      this.ctx.stroke();\r\n\r\n      this.ctx.beginPath();\r\n      this.ctx.fillStyle = colours.yellow;\r\n      this.drawInnerPetal(0, -this.size/2);\r\n      this.ctx.fill();\r\n\r\n      this.ctx.restore();\r\n    }\r\n  }\r\n\r\n  drawPetal(x, y) {\r\n    let s = this.size;\r\n    this.ctx.moveTo(x, y);\r\n    this.ctx.bezierCurveTo(x - (2*s), y - (1*s), x - (2*s), y - (1*s), x - (3*s), y - (5*s));\r\n    this.ctx.bezierCurveTo(x - (2*s), y - (6*s), x - (2*s), y - (6*s), x        , y - (5*s));\r\n    this.ctx.bezierCurveTo(x + (2*s), y - (6*s), x + (2*s), y - (6*s), x + (3*s), y - (5*s));\r\n    this.ctx.bezierCurveTo(x + (2*s), y - (1*s), x + (2*s), y - (1*s), x        , y        );\r\n  }\r\n\r\n  drawInnerPetal(x, y) {\r\n    let s = this.size;\r\n    this.ctx.moveTo(x        , y        );\r\n    this.ctx.lineTo(x - (s/2), y - (s/2));\r\n    this.ctx.lineTo(x        , y - (3*s));\r\n    this.ctx.lineTo(x + (s/2), y - (s/2));\r\n    this.ctx.lineTo(x        , y        );\r\n  }\r\n}\r\n\r\nexport default IrisEnsataVariegata;\r\n","/**\r\n * This class contains all information for each tadpole\r\n */\r\n\r\nimport colours from '../colours';\r\n\r\nclass Tadpole {\r\n  constructor(canvas, size) {\r\n    // Random Position on canvas\r\n    this.pos = [Math.random() * canvas.width, Math.random() * canvas.height];\r\n    // Random size 3-4\r\n    this.size = size/200;\r\n    // Initially still\r\n    this.vel = [0, 0];\r\n    // 1.5% chance to become leader\r\n    this.leader = Math.random() < 0.015;\r\n    // follow noone until assigned\r\n    this.follow = null;\r\n    // eagerness = how close to the leader the tadpole will follow\r\n    this.eagerness = Math.random();\r\n  }\r\n\r\n  /**\r\n   * TICK - Moves the entity\r\n   */\r\n  tick() {\r\n    this.pos[0] += this.vel[0];\r\n    this.pos[1] += this.vel[1];\r\n  }\r\n\r\n  /**\r\n   * RENDER - Draws an black ball and two smaller grey balls behind it to\r\n   *  simulate a tail\r\n   */\r\n  render(canvas, ctx) {\r\n    // Draw Body\r\n    ctx.beginPath();\r\n    ctx.fillStyle = colours.registration_black;\r\n    ctx.arc(this.pos[0], this.pos[1], this.size, 0, 2 * Math.PI);\r\n    ctx.fill();\r\n    // Draw Tail\r\n    ctx.beginPath();\r\n    ctx.fillStyle = colours.rasin_black;\r\n    ctx.arc(this.pos[0] - (this.vel[0] * 5), this.pos[1] - (this.vel[1] * 5), this.size / 4 * 3, 0, 2 * Math.PI);\r\n    ctx.fill();\r\n    ctx.beginPath();\r\n    ctx.arc(this.pos[0] - (this.vel[0] * 10), this.pos[1] - (this.vel[1] * 10), this.size / 2, 0, 2 * Math.PI);\r\n    ctx.fill();\r\n  }\r\n\r\n  /**\r\n   * GETLEADER - creates an array of leader tadpoles and radomly chooses\r\n   * which one it will follow\r\n   */\r\n  getLeader(tadpoles) {\r\n    let leaders = [];\r\n    for (let i = 0; i < tadpoles.length; i++) {\r\n      if (this.leader) {\r\n        break;\r\n      }\r\n      if (tadpoles[i].leader)\r\n        leaders.push(i);\r\n    }\r\n    this.follow = leaders[Math.floor(Math.random() * leaders.length)];\r\n  }\r\n}\r\n\r\nexport default Tadpole;\r\n","/**\r\n * This class contains all information for each fish\r\n */\r\n\r\nimport colours from '../colours';\r\n\r\nclass Fish {\r\n  constructor(canvas, ctx, size) {\r\n    // Random Position on canvas\r\n    this.pos = [Math.random() * canvas.width, Math.random() * canvas.height];\r\n    // Random size this.size-this.size * (3/2)\r\n    this.size = size/40;\r\n    // Random velocity [-1, -1] - [1, 1]\r\n    this.vel = [(Math.random() - 0.5) * 2, (Math.random() - 0.5) * 2];\r\n    // Colour\r\n    switch (Math.floor(Math.random() * 4)) {\r\n      // Beni-goi (are entirely red/orange)\r\n      case 0:\r\n        this.colourA = colours.orange_peel;\r\n        this.colourB = colours.yellow;\r\n        break;\r\n      // ki-goi (are entirely yellow/gold)\r\n      case 1:\r\n        this.colourA = colours.yellow;\r\n        this.colourB = colours.orange_peel;\r\n        break;\r\n      // Tancho (White with a red mark on the head but no red on body)\r\n      case 2:\r\n        this.colourA = ctx.createRadialGradient(0,0,this.size/4,0,0,this.size * 4);\r\n        this.colourA.addColorStop(0, \"red\");\r\n        this.colourA.addColorStop(0.25, \"white\");\r\n        this.colourA.addColorStop(1, \"white\");\r\n        this.colourB = colours.yellow;\r\n        break;\r\n      // Karasugoi (are entirely black/dark gray)\r\n      case 3:\r\n        this.colourA = colours.dark_gray;\r\n        this.colourB = \"white\";\r\n        break;\r\n      default:\r\n        this.colourA = colours.registration_black;\r\n        this.colourB = colours.registration_black;\r\n    }\r\n    // Extra Variables\r\n    this.swimming = true;\r\n    this.sin = 0;\r\n    this.angle = 0;\r\n    this.angles = [0, 0, 0, 0, 0, 0];\r\n    this.left = true;\r\n  }\r\n\r\n  /**\r\n   * TICK - Moves the entity and modifies any frame based values\r\n   */\r\n  tick() {\r\n    // sin is the angle along sin that the fish is swimming along\r\n    if (this.swimming) {\r\n      this.sin++;\r\n      if (this.sin > 1440)\r\n        this.sin = 0;\r\n    }\r\n    this.pos[0] += this.vel[0];\r\n    this.pos[1] += this.vel[1];\r\n\r\n    this.angle = Math.atan2(this.vel[1], this.vel[0]);\r\n  }\r\n\r\n  /**\r\n   * RENDER - Draws a head, a body, a tail and some fins\r\n   */\r\n  render(canvas, ctx) {\r\n    this.angles.push(this.angle);\r\n    this.angles.shift();\r\n\r\n    ctx.save();\r\n    ctx.translate(this.pos[0], this.pos[1]);\r\n    ctx.rotate(this.angle - Math.PI / 2);\r\n    ctx.lineWidth = 1;\r\n    this.drawfish(canvas, ctx, 0, 0, this.angles, true);\r\n    ctx.restore();\r\n\r\n    ctx.save();\r\n    ctx.translate(this.pos[0] - 10, this.pos[1] - 10);\r\n    ctx.rotate(this.angle - Math.PI / 2);\r\n    ctx.lineWidth = 1;\r\n    this.drawfish(canvas, ctx, 0, 0, this.angles, false);\r\n    ctx.restore();\r\n\r\n  }\r\n\r\n  drawfish(canvas, ctx, x, y, offsetArr, shadow) {\r\n    let offset = (offsetArr[0] - offsetArr[1]) * 100;\r\n    if (offset > 10) {\r\n      offset = 10;\r\n    } else if (offset < -10) {\r\n      offset = -10;\r\n    }\r\n    // Body Coordinates\r\n    let t = [x - this.size / 2 + offset, y - this.size * 5, x + this.size / 2 + offset, y - this.size * 5];\r\n    // Head Coordinates\r\n    let h = [x - this.size * (3 / 2), y, x + this.size * (3 / 2), y];\r\n    // Tail Coordinates\r\n    let f = [t[0] + offset - this.size / 2, t[1] - this.size, t[2] + offset + this.size / 2, t[3] - this.size];\r\n    // Fin Coordinates\r\n    let a = [h[0] - this.size - offset, h[1] - this.size, h[2] + this.size + offset, h[3] - this.size];\r\n\r\n    if (shadow)\r\n      ctx.fillStyle = colours.deep_blue;\r\n    else\r\n      ctx.fillStyle = this.colourA;\r\n\r\n    ctx.beginPath();\r\n    this.fishShape(canvas, ctx, x, y, h, t, f, a);\r\n    ctx.fill();\r\n\r\n    if (!shadow) {\r\n      ctx.strokeStyle = this.colourB;\r\n      ctx.beginPath();\r\n      this.fishShape(canvas, ctx, x, y, h, t, f, a);\r\n      ctx.stroke();\r\n    }\r\n\r\n  }\r\n\r\n  fishShape(canvas, ctx, x, y, h, t, f, a) {\r\n    // Head\r\n    ctx.moveTo(h[0], h[1]);\r\n    ctx.bezierCurveTo(x - this.size * (3 / 2), y + this.size * 2, x + this.size * (3 / 2), y + this.size * 2, h[2], h[3]);\r\n    // L fin\r\n    ctx.bezierCurveTo(a[2], h[3] - this.size / 2, a[2], h[3] - this.size / 2, a[2], a[3]);\r\n    ctx.bezierCurveTo(h[2] - this.size * (1 / 10), h[3] - this.size * (3 / 2), h[2] - this.size * (1 / 5), h[3] - this.size * (3 / 2), h[2], h[3] - this.size * (4 / 5));\r\n    ctx.lineTo(h[2], h[3]);\r\n    // L body\r\n    ctx.bezierCurveTo(x + this.size, y - this.size * (5 / 2), x + this.size, y - this.size * (5 / 2), t[2], t[3]);\r\n    // Tail\r\n    ctx.lineTo(f[2], f[3]);\r\n    ctx.lineTo(f[0], f[1]);\r\n    ctx.lineTo(t[0], t[1]);\r\n    // R body\r\n    ctx.bezierCurveTo(x - this.size, y - this.size * (5 / 2), x - this.size, y - this.size * (5 / 2), h[0], h[1]);\r\n    // R fin\r\n    ctx.bezierCurveTo(a[0], h[1] - this.size / 2, a[0], h[1] - this.size / 2, a[0], a[1]);\r\n    ctx.bezierCurveTo(h[0] + this.size * (1 / 10), h[1] - this.size * (3 / 2), h[0] + this.size * (1 / 5), h[1] - this.size * (3 / 2), h[0], h[1] - this.size * (4 / 5));\r\n    ctx.lineTo(h[0], h[1]);\r\n  }\r\n\r\n}\r\n\r\nexport default Fish;\r\n","/**\r\n * This class contains all information for each lily\r\n */\r\nimport colours from '../colours';\r\n\r\nclass Lily {\r\n  constructor(canvas, size) {\r\n    // Random Position on canvas\r\n    this.pos = [Math.random() * canvas.width, Math.random() * canvas.height];\r\n    // All have same size 30 - CHANGE TO RANDOM SOON\r\n    this.size = size/10;\r\n    // Random velocity [-0.5, -0.5] - [0.5, 0.5]\r\n    this.vel = [Math.random() - 0.5, Math.random() - 0.5];\r\n    // Chooses a random point to put the split of the lily pad\r\n    this.startAngle = Math.PI * 2 * Math.random();\r\n    // 50% if rotates clockwise or anticlockwise\r\n    this.clockwise = Math.random() < 0.5;\r\n    // 25% chance to have a water lily on top\r\n    this.isFlower = Math.random() < 0.25;\r\n  }\r\n\r\n  /**\r\n   * TICK - Moves the entity and rotates the pad\r\n   */\r\n  tick() {\r\n    if (this.clockwise)\r\n      this.startAngle += 0.001;\r\n    else\r\n      this.startAngle -= 0.001;\r\n    this.pos[0] += this.vel[0];\r\n    this.pos[1] += this.vel[1];\r\n  }\r\n\r\n  /**\r\n   * RENDER - Draws the pad with a segment if it has a lily and if it doesn't\r\n   * it draws a full pad with a flower on it\r\n   * Lily = full size dark circle & 3/4 light circle within\r\n   */\r\n  render(canvas, ctx) {\r\n    if (!this.isFlower) {\r\n      let start = this.startAngle;\r\n      // Shadow\r\n      ctx.beginPath();\r\n      ctx.fillStyle = colours.deep_blue;\r\n      ctx.arc(this.pos[0] + 20, this.pos[1] + 20, this.size, 0, Math.PI * 2);\r\n      ctx.fill();\r\n\r\n      // Draw First Half\r\n      ctx.beginPath();\r\n      ctx.fillStyle = colours.light_green;\r\n      ctx.arc(this.pos[0], this.pos[1], this.size, start, Math.PI + start);\r\n      ctx.fill();\r\n      ctx.beginPath();\r\n      ctx.fillStyle = colours.lily_green;\r\n      ctx.arc(this.pos[0], this.pos[1], this.size / 4 * 3, start, Math.PI + start);\r\n      ctx.fill();\r\n      // Draws second half with not full rotation to give the circle the slit\r\n      start += (Math.PI / 180) * 170;\r\n      ctx.beginPath();\r\n      ctx.fillStyle = colours.light_green;\r\n      ctx.arc(this.pos[0], this.pos[1], this.size, start, Math.PI + start);\r\n      ctx.fill();\r\n      ctx.beginPath();\r\n      ctx.fillStyle = colours.lily_green;\r\n      ctx.arc(this.pos[0], this.pos[1], this.size / 4 * 3, start, Math.PI + start);\r\n      ctx.fill();\r\n    } else {\r\n      // Shadow\r\n      ctx.beginPath();\r\n      ctx.fillStyle = colours.deep_blue;\r\n      ctx.arc(this.pos[0] + 20, this.pos[1] + 20, this.size, 0, Math.PI * 2);\r\n      ctx.fill();\r\n      // Draws the full circle\r\n      ctx.beginPath();\r\n      ctx.fillStyle = colours.light_green;\r\n      ctx.arc(this.pos[0], this.pos[1], this.size, 0, Math.PI * 2);\r\n      ctx.fill();\r\n      ctx.beginPath();\r\n      ctx.fillStyle = colours.lily_green;\r\n      ctx.arc(this.pos[0], this.pos[1], this.size / 4 * 3, 0, Math.PI * 2);\r\n      ctx.fill();\r\n      this.drawFlower(ctx);\r\n    }\r\n  }\r\n\r\n  // Draws 3 rings with reducing size and lighter colours\r\n  drawFlower(ctx) {\r\n    let firstRing = this.size / 4;\r\n    this.drawRing(ctx, colours.pink, this.size / 2, this.size / 4 * 3);\r\n    this.drawRing(ctx, colours.delicate_pink, this.size / 4, this.size / 2);\r\n    this.drawRing(ctx, colours.light_pink, this.size / 8, this.size / 3);\r\n    ctx.beginPath();\r\n    ctx.fillStyle = colours.yellow;\r\n    ctx.arc(this.pos[0], this.pos[1], this.size / 8, 0, Math.PI * 2);\r\n    ctx.fill();\r\n  }\r\n\r\n  // Draws 8 petals each at 45 degrees to each other\r\n  drawRing(ctx, fillStyle, w, h) {\r\n    for (let i = 0; i <= Math.PI * 2; i+= Math.PI/4) {\r\n      ctx.save();\r\n      ctx.translate(this.pos[0], this.pos[1]);\r\n      ctx.rotate(i);\r\n      this.drawPetal(ctx, fillStyle, 0, h / 2, w, h);\r\n      ctx.restore();\r\n    }\r\n  }\r\n\r\n  // Draws an elipse with center xy and width w and height h\r\n  drawPetal(ctx, fillStyle, x, y, w, h) {\r\n    ctx.beginPath();\r\n    ctx.fillStyle = fillStyle;\r\n    ctx.moveTo(x, y - h / 2);\r\n    ctx.bezierCurveTo(x + w / 2, y - h / 2, x + w / 2, y + h / 2, x, y + h / 2);\r\n    ctx.bezierCurveTo(x - w / 2, y + h / 2, x - w / 2, y - h / 2, x, y - h / 2);\r\n    ctx.fill();\r\n  }\r\n\r\n}\r\n\r\nexport default Lily;\r\n","/**\r\n *  This class is a manager for all ripples on the canvas\r\n */\r\n\r\nimport Ripple from './ripple';\r\n\r\nclass Water {\r\n  constructor(canvas, ctx) {\r\n    // For ease of access\r\n    this.canvas = canvas;\r\n    this.ctx = ctx;\r\n\r\n    this.ripples = [];\r\n\r\n  }\r\n\r\n  setBackground(background) {\r\n    this.background = background;\r\n  }\r\n\r\n  tick() {\r\n    this.ripples.forEach((r) => r.tick());\r\n    for (let i = 0; i < this.ripples.length; i++) {\r\n      if (this.ripples[i].w < 0) {\r\n        this.ripples.splice(i, 1);\r\n        i--;\r\n      }\r\n    }\r\n  }\r\n\r\n  /**\r\n   * Renders all ripples on the canvas\r\n   */\r\n  render() {\r\n    this.ripples.forEach((r) => r.render(this.canvas, this.ctx));\r\n  }\r\n\r\n  /**\r\n   * Resize method recalibrates all the settings such as width and height\r\n   * and size of arrays\r\n   */\r\n  resize() {\r\n\r\n  }\r\n\r\n  /**\r\n   * Simulates a drop starting at the given coordinates\r\n   */\r\n  dropAt(dx, dy, vx = 0, vy = 0) {\r\n    dx <<= 0;\r\n    dy <<= 0;\r\n    if (this.background.isColliding([dx, dy]) == null)\r\n      this.ripples.push(new Ripple(dx, dy, vx, vy));\r\n  }\r\n\r\n  randomDrop() {\r\n    this.dropAt(Math.random() * this.width, Math.random() * this.height);\r\n  }\r\n}\r\n\r\nexport default Water;\r\n","/**\r\n *  This class contains all the ripple effects to the pond\r\n */\r\nimport colours from '../../colours';\r\n\r\nclass Ripple {\r\n  constructor(dx, dy, vx = 0, vy = 0) {\r\n    this.dx = dx\r\n    this.dy = dy\r\n    this.vx = vx * 10;\r\n    this.vy = vy * 10;\r\n    this.size = 0;\r\n    this.w = 10;\r\n    // larger value == larger ripple size;\r\n    let maxSize = 0.05;\r\n    let minSize = 0.1;\r\n    this.maxSize = maxSize + Math.random() * (minSize - maxSize);\r\n  }\r\n\r\n  tick() {\r\n    this.size += 0.4;\r\n    this.w -= this.maxSize;\r\n  }\r\n\r\n  /**\r\n   * Takes in the original canvas then draws the ripple\r\n   */\r\n  render(canvas, ctx) {\r\n    let x = this.dx;\r\n    let y = this.dy;\r\n    let s = this.size;\r\n    \r\n    ctx.beginPath();\r\n    ctx.lineWidth = this.w;\r\n    ctx.strokeStyle = colours.deep_blue;\r\n    ctx.arc(x, y, s, 0, Math.PI * 2);\r\n    ctx.stroke();\r\n\r\n    if (s > 10) {\r\n      s -= 10;\r\n      x += this.vx;\r\n      y += this.vy;\r\n    }\r\n    ctx.beginPath();\r\n    ctx.lineWidth = this.w/2;\r\n    ctx.strokeStyle = colours.deep_blue;\r\n    ctx.arc(x, y, s, 0, Math.PI * 2);\r\n    ctx.stroke();\r\n  }\r\n}\r\n\r\nexport default Ripple;\r\n","class Collisions {\r\n  constructor(tadpoles, fish, lillies, background) {\r\n    this.tadpoles = tadpoles;\r\n    this.fish = fish;\r\n    this.lillies = lillies;\r\n    this.background = background;\r\n  }\r\n\r\n  checkTadpoles(movement) {\r\n    for (let i = 0; i < this.tadpoles.length; i++) {\r\n      let pondEdge = this.background.isColliding(this.tadpoles[i].pos);\r\n      if (pondEdge != null) {\r\n        let pos = this.tadpoles[i].pos;\r\n        let dx = pondEdge[0] - pos[0];\r\n        let dy = pondEdge[1] - pos[1];\r\n        let len = Math.sqrt(Math.pow(dx, 2) + Math.pow(dy, 2));\r\n        movement.smoothing(i, dx / len, dy / len);\r\n      }\r\n    }\r\n  }\r\n\r\n  checkFish(movement) {\r\n    for (let i = 0; i < this.fish.length; i++) {\r\n      let pondEdge = this.background.isColliding(this.fish[i].pos);\r\n      if (pondEdge != null) {\r\n        let pos = this.fish[i].pos;\r\n        let dx = pondEdge[0] - pos[0];\r\n        let dy = pondEdge[1] - pos[1];\r\n        movement.smoothing(i, dx, dy);\r\n      }\r\n    }\r\n  }\r\n\r\n  checkLillies(movement) {\r\n    for (let i = 0; i < this.lillies.length; i++) {\r\n      let pondEdge = this.background.isColliding(this.lillies[i].pos);\r\n      if (pondEdge != null) {\r\n        let pos = this.lillies[i].pos;\r\n        let dx = pondEdge[0] - pos[0];\r\n        let dy = pondEdge[1] - pos[1];\r\n        movement.smoothing(i, dx, dy);\r\n      }\r\n      for (let j = 0; j < this.lillies.length; j++) {\r\n        if (i == j) continue;\r\n        if (this.isColliding(this.lillies[i], this.lillies[j])) {\r\n\r\n        }\r\n      }\r\n    }\r\n  }\r\n\r\n  isColliding(a, b) {\r\n    return false;\r\n  }\r\n}\r\n\r\nexport default Collisions;\r\n","/*\r\n * TADMOVEMENT\r\n * All of the movement patterns for tadpoles are contained here\r\n */\r\n\r\nimport Movement from './movement'\r\n\r\nclass TadMovement extends Movement {\r\n  constructor(entity, canvas, collisions) {\r\n    super(entity, canvas, collisions);\r\n    this.spacing = 20;\r\n  }\r\n\r\n  move() {\r\n    // Chance that the tadpole will change their leadership state\r\n    let leaderChance = 0.0000005;\r\n\r\n    // Chance that the tadpole will change the leader they are following\r\n    let followChance = 0.00002;\r\n\r\n\r\n    for (let i = 0; i < this.entities.length; i++) {\r\n      let pos = this.entities[i].pos;\r\n      this.edgeCheck(i, pos);\r\n\r\n      if (this.entities[i].leader) { // Leader\r\n        // Random movement\r\n        this.smoothing(i, (Math.random() - 0.5) * 2, (Math.random() - 0.5) * 2);\r\n\r\n        if (Math.random() < leaderChance) {\r\n          this.entities[i].leader = false;\r\n\r\n          // Makes all tadpoles following that leader find a new leader\r\n          for (let j = 0; j < this.entities.length; j++) {\r\n            if (this.entities[j].follow == i) {\r\n              this.entities[i].getLeader(this.entities);\r\n            }\r\n          }\r\n        }\r\n\r\n      } else if (this.entities[i].follow == null) { // Prevents error\r\n        this.entities[i].getLeader(this.entities);\r\n\r\n      } else { // Non Leader\r\n        // Setting variables\r\n        let leaderPos = this.entities[this.entities[i].follow].pos;\r\n        let disX = pos[0] - leaderPos[0];\r\n        let disY = pos[1] - leaderPos[1];\r\n        // Length between current position and leader position\r\n        let length = Math.sqrt(Math.pow(disX, 2) + Math.pow(disY, 2));\r\n\r\n        if (length == 0) length = 1; // Preventing dividing by zero\r\n        if (length > this.entities[i].eagerness * this.spacing) {\r\n          this.smoothing(i, -(disX) / (length * 2), -(disY) / (length * 2));\r\n        } else {\r\n          this.smoothing(i, (Math.random() - 0.5) * 4, (Math.random() - 0.5) * 4);\r\n        }\r\n\r\n        if (Math.random() < followChance) {\r\n          this.entities[i].getLeader(this.entities);\r\n        }\r\n        if (Math.random() < leaderChance) {\r\n          this.entities[i].leader = true;\r\n        }\r\n\r\n      }\r\n      this.slowing(i, 0.5);\r\n    }\r\n    this.collisions.checkTadpoles(this);\r\n  }\r\n}\r\n\r\nexport default TadMovement;\r\n","import Movement from './movement'\r\n\r\nclass FishMovement extends Movement {\r\n  constructor(entity, canvas, collisions) {\r\n    super(entity, canvas, collisions);\r\n    this.spacing = 20;\r\n  }\r\n\r\n  move(water) {\r\n    let wiggleRate = 8;\r\n    let wiggleSize = 0.5;\r\n    let speed = 1;\r\n\r\n    for (let i = 0; i < this.entities.length; i++) {\r\n      let pos = this.entities[i].pos;\r\n      this.edgeCheck(i, pos);\r\n      if (this.entities[i].swimming) {\r\n        this.entities[i].vel[1] = wiggleSize * Math.sin(2 * Math.PI * (this.entities[i].sin / wiggleRate * Math.PI / 180));\r\n        if (Math.random() < 0.005) {\r\n          this.entities[i].swimming = false;\r\n          this.entities[i].vel = [0, 0];\r\n        }\r\n        this.slowing(i, 2);\r\n      } else {\r\n        this.reduce(i);\r\n        if (this.entities[i].vel[0] < 0.01 && this.entities[i].vel[1] < 0.01) {\r\n          if (Math.random() < 0.5) {\r\n            this.entities[i].swimming = true;\r\n            this.entities[i].vel = [(Math.random() - 0.5) * 2, (Math.random() - 0.5) * 2];\r\n          } else {\r\n            // Setting a random direction and speed while not being in the\r\n            // range -1 to 1 as it is too slow\r\n            let velx = (Math.random() > 0.5 ? 1 : -1) * (speed * Math.random() + 1.5);\r\n            let vely = (Math.random() > 0.8 ? 1 : -1) * (speed * Math.random() + 1.5);\r\n            this.entities[i].vel = [velx, vely];\r\n\r\n            // Adding a water drop\r\n            water.dropAt(pos[0], pos[1], this.entities[i].vel[0], this.entities[i].vel[1]);\r\n          }\r\n        }\r\n      }\r\n    }\r\n\r\n    this.collisions.checkFish(this);\r\n  }\r\n\r\n  reduce(fish) {\r\n    let redFactor = 0.99;\r\n    let velX = this.entities[fish].vel[0] * redFactor;\r\n    let velY = this.entities[fish].vel[1] * redFactor;\r\n    this.entities[fish].vel = [velX, velY];\r\n  }\r\n}\r\n\r\nexport default FishMovement;\r\n","import Movement from './movement'\r\n\r\nclass LilyMovement extends Movement {\r\n  constructor(entity, canvas, collisions) {\r\n    super(entity, canvas, collisions);\r\n    this.spacing = 20;\r\n  }\r\n\r\n  move() {\r\n    for (let i = 0; i < this.entities.length; i++) {\r\n      let pos = this.entities[i].pos;\r\n      this.edgeCheck(i, pos);\r\n      this.slowing(i, 0.1)\r\n    }\r\n    this.collisions.checkLillies(this);\r\n  }\r\n}\r\n\r\nexport default LilyMovement;\r\n"],"sourceRoot":""}