{"version":3,"file":"./js/pond.bundle.js","mappings":"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","sources":["webpack://canvas-template/./src/background/background.js","webpack://canvas-template/./src/background/plants/cattail.js","webpack://canvas-template/./src/background/plants/flowerBush.js","webpack://canvas-template/./src/background/plants/irisEnsataVariegata.js","webpack://canvas-template/./src/background/plants/lobeliaCardinalis.js","webpack://canvas-template/./src/background/plants/longGrass.js","webpack://canvas-template/./src/background/plants/tree.js","webpack://canvas-template/./src/background/rock.js","webpack://canvas-template/./src/colours.js","webpack://canvas-template/./src/mystyles.scss","webpack://canvas-template/webpack/bootstrap","webpack://canvas-template/./src/pond.js"],"sourcesContent":["import * as colours from '../colours';\r\nimport Rock from './rock';\r\nimport Cattail from './plants/cattail';\r\nimport LongGrass from './plants/longGrass';\r\nimport Tree from './plants/tree';\r\nimport LobeliaCardinalis from './plants/lobeliaCardinalis';\r\nimport FlowerBush from './plants/flowerBush';\r\n\r\n/**\r\n * BACKGROUND:\r\n * This class creates the bank of the pond and checks to see if fish are\r\n * colliding with it\r\n */\r\nclass Background {\r\n  constructor(app) {\r\n    this.app = app\r\n    this.pondColour = colours.ocean_blue;\r\n    this.landColour = colours.pea;\r\n\r\n    let pointRange = 20; // 10 low poly -> 500 close to square\r\n    let buffer = window.innerWidth/32\r\n    let randomPoints = [];\r\n    for (let i = 0; i < pointRange; i++) {\r\n      let x = Math.floor(Math.random() * (window.innerWidth - (2 * buffer))) + buffer\r\n      let y = Math.floor(Math.random() * (window.innerHeight - (2 * buffer))) + buffer\r\n      randomPoints.push({x:x, y:y});\r\n    }\r\n    this.edgeOfPondPoints = this.convexHull(randomPoints)\r\n    this.createLand();\r\n  }\r\n\r\n  convexHull(points) {\r\n    points.sort(function (a, b) {\r\n      return a.x != b.x ? a.x - b.x : a.y - b.y;\r\n    });\r\n\r\n    var n = points.length;\r\n    var hull = [];\r\n\r\n    for (var i = 0; i < 2 * n; i++) {\r\n      var j = i < n ? i : 2 * n - 1 - i;\r\n      while (hull.length >= 2 && this.removeMiddle(hull[hull.length - 2], hull[hull.length - 1], points[j]))\r\n        hull.pop();\r\n      hull.push(points[j]);\r\n    }\r\n\r\n    hull.pop();\r\n    return hull;\r\n  }\r\n\r\n  removeMiddle(a, b, c) {\r\n    var cross = (a.x - b.x) * (c.y - b.y) - (a.y - b.y) * (c.x - b.x);\r\n    var dot = (a.x - b.x) * (c.x - b.x) + (a.y - b.y) * (c.y - b.y);\r\n    return cross < 0 || cross == 0 && dot <= 0;\r\n  }\r\n\r\n  createLand() {\r\n    // Create a polygon of the pond object\r\n    let points = []\r\n    for (let i in this.edgeOfPondPoints) {\r\n      points.push(this.edgeOfPondPoints[i].x)\r\n      points.push(this.edgeOfPondPoints[i].y)\r\n    }\r\n    this.pond = new PIXI.Graphics();\r\n    this.pond.beginFill(this.pondColour)\r\n    this.pondShape = new PIXI.Polygon(points)\r\n    this.pond.drawPolygon(this.pondShape)\r\n    this.app.stage.addChild(this.pond)\r\n\r\n    // Draw Grass\r\n    let grassCount = 1000;\r\n    this.grass = []\r\n    for (let i = 0; i < grassCount; i++) {\r\n      let x = Math.floor(Math.random() * window.innerWidth)\r\n      let y = Math.floor(Math.random() * window.innerHeight)\r\n      if (this.pondShape.contains(x, y)) {\r\n        i--;\r\n        continue\r\n      }\r\n      let singleBlade = new LongGrass(this.app, x, y)\r\n      this.app.stage.addChild(singleBlade)\r\n      this.grass.push(singleBlade)\r\n    }\r\n\r\n    // Draw Rocks\r\n    let rockCount = 50;\r\n    this.rocks = []\r\n    let rockCoords = this.edgeOfPond(rockCount);\r\n    for (let i = 0; i < rockCount; i++) {\r\n      let rock = new Rock(this.app, rockCoords[i][0], rockCoords[i][1])\r\n      this.app.stage.addChild(rock)\r\n    }\r\n  }\r\n\r\n  pointOnLine(x1,y1,x2,y2,per) {\r\n    return [x1 + (x2 - x1) * per, y1 + (y2 - y1) * per];\r\n  }\r\n\r\n  // createLandDEPRECATED(canvas, ctx) {\r\n  //   // Draw grassCount number of grass on pond bank\r\n  //   let grassCount = this.size * 5;\r\n  //   this.aroundPond(grassCount, new LongGrass(this.canvasB, ctxB, this.size));\r\n  //   // Draw rockCount number of rocks around Pond\r\n  //   let rockCount = 100;\r\n  //   this.edgeOfPond(rockCount, new Rock(this.canvasB, ctxB, this.size));\r\n  //   // 25% chance to draw stepping stones\r\n  //   // TODO: Draw Stepping stones\r\n  //\r\n  //   // Draw Flowers\r\n  //   this.aroundPond(Math.ceil(Math.random() * this.size / 80), new FlowerBush(this.canvasB, ctxB, this.size));\r\n  //\r\n  //   // Draw cattailCount number of cattails around pond\r\n  //   let cattailCount = 30;\r\n  //   this.edgeOfPond(cattailCount, new Cattail(this.canvasB, ctxB, this.size));\r\n  //   // 75% chance of tree around pond\r\n  //   if (Math.random() < 0.75) {\r\n  //     this.aroundPond(1, new Tree(this.canvasB, ctxB, this.size));\r\n  //   }\r\n  // }\r\n\r\n  getDistance(xA, yA, xB, yB) {\r\n    let xDiff = xA - xB;\r\n    let yDiff = yA - yB;\r\n    return Math.sqrt(xDiff * xDiff + yDiff * yDiff);\r\n  }\r\n\r\n  edgeOfPond(amount) {\r\n    //prep\r\n    let totalDistance = 0;\r\n    let linesPerDistance = []\r\n    for (let i = 0; i < this.edgeOfPondPoints.length; i++) {\r\n      let cur = this.getDistance(\r\n        this.edgeOfPondPoints[i].x,\r\n        this.edgeOfPondPoints[i].y,\r\n        this.edgeOfPondPoints[(i + 1) % this.edgeOfPondPoints.length].x,\r\n        this.edgeOfPondPoints[(i + 1) % this.edgeOfPondPoints.length].y\r\n      );\r\n      linesPerDistance.push(cur)\r\n      totalDistance += cur;\r\n    }\r\n    let outputPoints = [];\r\n    for (let i = 0; i < amount; i++) {\r\n      let pointPos = totalDistance / amount * (i - 0.5 + Math.random())\r\n      let pointLine = 0;\r\n      for (let i = 0; i < linesPerDistance.length; i++) {\r\n        if (linesPerDistance[i] < pointPos) {\r\n          pointPos -= linesPerDistance[i];\r\n          continue;\r\n        }\r\n        pointLine = i;\r\n        break;\r\n      }\r\n      outputPoints.push(this.pointOnLine(\r\n        this.edgeOfPondPoints[pointLine].x,\r\n        this.edgeOfPondPoints[pointLine].y,\r\n        this.edgeOfPondPoints[(pointLine + 1) % this.edgeOfPondPoints.length].x,\r\n        this.edgeOfPondPoints[(pointLine + 1) % this.edgeOfPondPoints.length].y,\r\n        pointPos / linesPerDistance[pointLine]\r\n      ))\r\n    }\r\n    console.log(outputPoints)\r\n    return outputPoints\r\n  }\r\n\r\n  // aroundPond(count, entity) {\r\n  //   for (let i = 0; i < count; i++) {\r\n  //     let pondEdge = false;\r\n  //     let pos;\r\n  //     while (!pondEdge) {\r\n  //       pos = [Math.random() * entity.canvas.width, Math.random() * entity.canvas.height];\r\n  //       if (this.isColliding(pos) != null) {\r\n  //         pondEdge = true;\r\n  //       }\r\n  //     }\r\n  //     entity.setPos(pos);\r\n  //     entity.render();\r\n  //   }\r\n  // }\r\n  //\r\n  // withinPond(count, entity) {\r\n  //   // TODO: Code to put all entities within the pond\r\n  // }\r\n  //\r\n  // renderPond(canvas, ctx) {\r\n  //   ctx.fillStyle = this.pondColour;\r\n  //   ctx.fillRect(0, 0, canvas.width, canvas.height);\r\n  // }\r\n  //\r\n  // // Draws loaded template\r\n  // renderLand(canvas, ctx) {\r\n  //   if (this.canvasB.width > 0 && this.canvasB.height > 0) {\r\n  //     ctx.drawImage(this.canvasB, 0, 0);\r\n  //   }\r\n  // }\r\n  //\r\n  // isColliding(pos) {\r\n  //   // Calculate if the object will collide with the wall\r\n  //   let dxa = pos[0] - this.pos[0];\r\n  //   let dya = pos[1] - this.pos[1];\r\n  //   let dxb = pos[0] - this.pos[2];\r\n  //   let dyb = pos[1] - this.pos[3];\r\n  //   let lenA = Math.sqrt(Math.pow(dxa, 2) + Math.pow(dya, 2));\r\n  //   let lenB = Math.sqrt(Math.pow(dxb, 2) + Math.pow(dyb, 2));\r\n  //   if (lenA < this.size || lenB < this.size) {\r\n  //     return null;\r\n  //   }\r\n  //   // return collision info here\r\n  //   if (lenB > lenA) {\r\n  //     return [this.pos[0], this.pos[1]];\r\n  //   } else {\r\n  //     return [this.pos[2], this.pos[3]];\r\n  //   }\r\n  // }\r\n}\r\n\r\nexport default Background;\r\n","import * as colours from  '../../colours';\r\n\r\n/**\r\n * CATTAIL class\r\n * Draws a cattail of a random angle at a position on the canvas\r\n */\r\nclass Cattail {\r\n  constructor(canvas, ctx, size) {\r\n    this.canvas = canvas;\r\n    this.ctx = ctx;\r\n    this.size = size / 2 + size / 2 * Math.random();\r\n  }\r\n\r\n  setPos(pos) {\r\n    this.pos = pos;\r\n  }\r\n\r\n  render() {\r\n    let length = Math.random();\r\n    let stemLength = this.size / 8 * length;\r\n    let stemThickness = this.size / 64;\r\n    let stemColour = colours.dark_green;\r\n    let headLength = this.size / 15 * length;\r\n    let headThickness = this.size / 20;\r\n    let headColour = colours.olive;\r\n    let tipLength = this.size / 40 * length;\r\n    let tipThickness = this.size / 120;\r\n    let tipColour = colours.khaki;\r\n    let rotation = Math.random() * 2 * Math.PI;\r\n\r\n    this.ctx.save();\r\n    this.ctx.translate(this.pos[0], this.pos[1]);\r\n    this.ctx.rotate(rotation);\r\n    this.drawLine(0, stemLength, stemThickness, stemColour);\r\n    this.drawLine(stemLength + stemThickness, headLength, headThickness, headColour);\r\n    this.drawLine(stemLength + stemThickness + headLength, tipLength, tipThickness, tipColour);\r\n    this.ctx.restore();\r\n  }\r\n\r\n  drawLine(start, length, thickness, colour) {\r\n    this.ctx.beginPath();\r\n    this.ctx.lineCap = \"round\";\r\n    this.ctx.strokeStyle = colour;\r\n    this.ctx.lineWidth = thickness;\r\n    this.ctx.moveTo(0, start);\r\n    this.ctx.lineTo(0, length + start);\r\n    this.ctx.stroke();\r\n  }\r\n\r\n}\r\n\r\nexport default Cattail;\r\n","import * as colours from  '../../colours';\r\nimport LongGrass from './longGrass';\r\nimport IrisEnsataVariegata from './irisEnsataVariegata';\r\n\r\nclass FlowerBush {\r\n  constructor(canvas, ctx, size) {\r\n    this.canvas = canvas;\r\n    this.ctx = ctx;\r\n    this.size = size;\r\n  }\r\n\r\n  setPos(pos) {\r\n    this.pos = pos;\r\n  }\r\n  // ctx.save pushes current state onto stack therefore\r\n  // multiple saves can be used to minimize code\r\n  render() {\r\n    let s = this.size / 15;\r\n    let flower = new IrisEnsataVariegata(this.canvas, this.ctx, this.size);\r\n    let x = this.pos[0];\r\n    let y = this.pos[1];\r\n\r\n    this.drawBush(x, y)\r\n\r\n    flower.setPos([0, 0]);\r\n    this.ctx.save();\r\n\r\n    this.ctx.translate(x, y);\r\n    this.ctx.save();\r\n    this.ctx.rotate(Math.random() * 2 * Math.PI);\r\n    flower.render();\r\n    this.ctx.restore();\r\n    this.ctx.translate(0, s * 1.2);\r\n    this.ctx.save();\r\n    this.ctx.rotate(Math.random() * 2 * Math.PI);\r\n    flower.render();\r\n    this.ctx.restore();\r\n    this.ctx.translate(-s, -(2 * s));\r\n    this.ctx.save();\r\n    this.ctx.rotate(Math.random() * 2 * Math.PI);\r\n    flower.render();\r\n    this.ctx.restore();\r\n    this.ctx.translate((2 * s), 0);\r\n    this.ctx.rotate(Math.random() * 2 * Math.PI);\r\n    flower.render();\r\n\r\n    this.ctx.restore();\r\n\r\n  }\r\n\r\n  drawBush(x, y) {\r\n    let w = this.size / 20;\r\n    let h = w * 6;\r\n    this.ctx.save();\r\n    this.ctx.translate(x, y);\r\n\r\n    for (let i = 0; i < Math.PI; i += Math.PI / 10) {\r\n      this.ctx.save();\r\n      this.ctx.rotate(i);\r\n      this.ctx.beginPath();\r\n      this.ctx.fillStyle = colours.forest_green;\r\n      this.ctx.moveTo(0, -h / 2);\r\n      this.ctx.bezierCurveTo(w / 2, -h / 2, w / 2, h / 2, 0, h / 2);\r\n      this.ctx.bezierCurveTo(-w / 2, h / 2, -w / 2, -h / 2, 0, -h / 2);\r\n      this.ctx.fill();\r\n      this.ctx.beginPath();\r\n      this.ctx.strokeStyle = colours.yellow_green;\r\n      this.ctx.moveTo(0, -h / 2);\r\n      this.ctx.bezierCurveTo(w / 2, -h / 2, w / 2, h / 2, 0, h / 2);\r\n      this.ctx.bezierCurveTo(-w / 2, h / 2, -w / 2, -h / 2, 0, -h / 2);\r\n      this.ctx.stroke();\r\n      this.ctx.restore();\r\n    }\r\n    this.ctx.restore();\r\n  }\r\n}\r\n\r\nexport default FlowerBush;\r\n","import * as colours from  '../../colours';\r\nimport LongGrass from './longGrass';\r\n\r\nclass IrisEnsataVariegata {\r\n  constructor(canvas, ctx, size) {\r\n    this.canvas = canvas;\r\n    this.ctx = ctx;\r\n    this.size = size / 180;\r\n  }\r\n\r\n  setPos(pos) {\r\n    this.pos = pos;\r\n  }\r\n\r\n  render() {\r\n    let x = this.pos[0];\r\n    let y = this.pos[1];\r\n    for (let i = 0; i <= 2 * Math.PI; i += (2 / 3) * Math.PI) {\r\n      this.ctx.save();\r\n      this.ctx.translate(x, y);\r\n      this.ctx.rotate(i);\r\n\r\n      this.ctx.beginPath();\r\n      this.ctx.fillStyle = colours.purple;\r\n      this.drawPetal(0, -this.size / 2);\r\n      this.ctx.fill();\r\n      this.ctx.beginPath();\r\n      this.ctx.strokeStyle = colours.indigo;\r\n      this.drawPetal(0, -this.size / 2);\r\n      this.ctx.stroke();\r\n\r\n      this.ctx.beginPath();\r\n      this.ctx.fillStyle = colours.yellow;\r\n      this.drawInnerPetal(0, -this.size / 2);\r\n      this.ctx.fill();\r\n\r\n      this.ctx.restore();\r\n    }\r\n  }\r\n\r\n  drawPetal(x, y) {\r\n    let s = this.size;\r\n    this.ctx.moveTo(x, y);\r\n    this.ctx.bezierCurveTo(x - (2 * s), y - (1 * s), x - (2 * s), y - (1 * s), x - (3 * s), y - (5 * s));\r\n    this.ctx.bezierCurveTo(x - (2 * s), y - (6 * s), x - (2 * s), y - (6 * s), x, y - (5 * s));\r\n    this.ctx.bezierCurveTo(x + (2 * s), y - (6 * s), x + (2 * s), y - (6 * s), x + (3 * s), y - (5 * s));\r\n    this.ctx.bezierCurveTo(x + (2 * s), y - (1 * s), x + (2 * s), y - (1 * s), x, y);\r\n  }\r\n\r\n  drawInnerPetal(x, y) {\r\n    let s = this.size;\r\n    this.ctx.moveTo(x, y);\r\n    this.ctx.lineTo(x - (s / 2), y - (s / 2));\r\n    this.ctx.lineTo(x, y - (3 * s));\r\n    this.ctx.lineTo(x + (s / 2), y - (s / 2));\r\n    this.ctx.lineTo(x, y);\r\n  }\r\n}\r\n\r\nexport default IrisEnsataVariegata;\r\n","import * as colours from'../../colours';\r\n\r\nclass LobeliaCardinalis {\r\n  constructor(canvas, ctx, size) {\r\n    this.canvas = canvas;\r\n    this.ctx = ctx;\r\n    this.size = size;\r\n  }\r\n\r\n  setPos(pos) {\r\n    this.pos = pos;\r\n  }\r\n\r\n  render() {\r\n\r\n  }\r\n}\r\n\r\nexport default LobeliaCardinalis;\r\n","import * as colours from '../../colours';\r\n\r\nclass LongGrass extends PIXI.Container {\r\n  constructor(app, x, y) {\r\n    super()\r\n\r\n    this.grass = new PIXI.Graphics();\r\n    let w = window.innerHeight / 80\r\n    let h = w * 6\r\n    this.position.set(x, y)\r\n    this.angle = (Math.random() * 100) - 50\r\n\r\n    this.grass\r\n        .beginFill(colours.forest_green)\r\n        .moveTo(0, -h / 2)\r\n        .bezierCurveTo(w / 4, -h / 2, w / 4, h / 2, 0, h / 2)\r\n        .bezierCurveTo(-w / 4, h / 2, -w / 4, -h / 2, 0, -h / 2)\r\n    this.addChild(this.grass)\r\n  }\r\n\r\n}\r\n\r\nexport default LongGrass;\r\n","import * as colours from '../../colours';\r\n\r\nclass Tree {\r\n  constructor(canvas, ctx, size) {\r\n    this.canvas = canvas;\r\n    this.ctx = ctx;\r\n    this.size = size;\r\n  }\r\n\r\n  setPos(pos) {\r\n    this.pos = pos;\r\n  }\r\n\r\n  render() {\r\n    // Change for initial thickness\r\n    let w = this.size / 20;\r\n\r\n    this.ctx.save();\r\n    this.ctx.translate(this.pos[0], this.pos[1]);\r\n    for (let i = 0; i < Math.PI * 2; i += Math.PI / 8) {\r\n      this.ctx.rotate(i);\r\n      this.drawTree(0, 0, w);\r\n    }\r\n    // this.drawLeaf(0,0,this.size/200);\r\n    this.ctx.restore();\r\n\r\n  }\r\n\r\n  drawTree(x, y, w) {\r\n    for (let i = 0; i < 2; i++) {\r\n      // Change the amount for spread of the tree\r\n      let dx = Math.random() * this.size / 7;\r\n      let dy = Math.random() * this.size / 7;\r\n      this.drawBranch(x, y, dx, dy, w);\r\n      // Change for minimum branch thickness\r\n      if (w > this.size / 80) {\r\n        // Change w amount for change in thickness\r\n        this.drawTree(x + dx, y + dy, w / 1.75);\r\n      }\r\n      this.ctx.fillStyle = colours.leaf_brown;\r\n      this.drawSakuraLeaf(x + dx, y + dy, this.size / 200);\r\n    }\r\n\r\n  }\r\n\r\n  drawSakuraLeaf(x, y, w) {\r\n    this.ctx.beginPath();\r\n    this.ctx.moveTo(x, y);\r\n    this.ctx.bezierCurveTo(x - (4 * w), y, x - (4 * w), y, x - (8 * w), y - (2 * w));\r\n    this.ctx.bezierCurveTo(x - (4 * w), y - (2 * w), x - (4 * w), y - (2 * w), x, y);\r\n\r\n    this.ctx.bezierCurveTo(x + (4 * w), y, x + (4 * w), y, x + (8 * w), y - (2 * w));\r\n    this.ctx.bezierCurveTo(x + (4 * w), y - (2 * w), x + (4 * w), y - (2 * w), x, y);\r\n\r\n    this.ctx.bezierCurveTo(x - (6 * w), y, x - (6 * w), y, x - (12 * w), y + (4 * w));\r\n    this.ctx.bezierCurveTo(x - (6 * w), y + (4 * w), x - (6 * w), y + (4 * w), x, y);\r\n\r\n    this.ctx.bezierCurveTo(x + (6 * w), y, x + (6 * w), y, x + (12 * w), y + (4 * w));\r\n    this.ctx.bezierCurveTo(x + (6 * w), y + (4 * w), x + (6 * w), y + (4 * w), x, y);\r\n\r\n    this.ctx.bezierCurveTo(x - (3 * w), y + (7 * w), x - (3 * w), y + (7 * w), x - (10 * w), y + (12 * w));\r\n    this.ctx.bezierCurveTo(x - (6 * w), y + (5 * w), x - (8 * w), y + (5 * w), x, y);\r\n\r\n    this.ctx.bezierCurveTo(x + (3 * w), y + (7 * w), x + (3 * w), y + (7 * w), x + (10 * w), y + (12 * w));\r\n    this.ctx.bezierCurveTo(x + (6 * w), y + (5 * w), x + (8 * w), y + (5 * w), x, y);\r\n\r\n    this.ctx.bezierCurveTo(x - (3 * w), y + (9 * w), x - (3 * w), y + (9 * w), x, y + (18 * w));\r\n    this.ctx.bezierCurveTo(x + (3 * w), y + (9 * w), x + (3 * w), y + (9 * w), x, y);\r\n\r\n    this.ctx.fill();\r\n  }\r\n\r\n  drawBranch(x, y, dx, dy, w) {\r\n    this.ctx.beginPath();\r\n    this.ctx.lineWidth = w;\r\n    this.ctx.lineCap = \"round\";\r\n    this.ctx.strokeStyle = colours.bark;\r\n    this.ctx.moveTo(x, y);\r\n    this.ctx.lineTo(x + dx, y + dy);\r\n    this.ctx.stroke();\r\n  }\r\n\r\n}\r\n\r\nexport default Tree;\r\n","import * as colours from '../colours';\r\n\r\nclass Rock extends PIXI.Container {\r\n  constructor(app, x, y) {\r\n    super()\r\n    this.app = app;\r\n    this.size = window.innerHeight / 30;\r\n    let points = this.generatePoints(x, y)\r\n    this.rock = new PIXI.Graphics();\r\n    this.rock//.lineStyle(1, colours.dark_gray)\r\n        .beginFill(colours.rock_gray)\r\n        .drawPolygon(this.outerPoints)\r\n    this.rockshade = new PIXI.Graphics();\r\n    this.rockshade//.lineStyle(1, colours.dark_gray)\r\n        .beginFill(colours.gray)\r\n        .drawPolygon(this.innerPoints)\r\n    this.addChild(this.rock, this.rockshade)\r\n  }\r\n\r\n  generatePoints(x, y) {\r\n    let pointCountAvg = 8;\r\n    let circPos = [((360 / pointCountAvg) * Math.random() * 2)];\r\n    while (circPos[circPos.length - 1] < 360) {\r\n      let nextPoint = circPos[circPos.length - 1] + (360 / pointCountAvg / 2) + (360 / pointCountAvg / 2) * Math.random() * 2;\r\n      circPos.push(nextPoint);\r\n    }\r\n    circPos.pop();\r\n\r\n    this.innerPoints = [];\r\n    this.outerPoints = [];\r\n    for (let a = 0; a < circPos.length; a++) {\r\n      let px = this.size * Math.cos(circPos[a] * (Math.PI / 180)) + x;\r\n      let py = this.size * Math.sin(circPos[a] * (Math.PI / 180)) + y;\r\n      this.outerPoints.push(px, py);\r\n      px = this.size * 5 / 8 * Math.cos(circPos[a] * (Math.PI / 180)) + x;\r\n      py = this.size * 5 / 8 * Math.sin(circPos[a] * (Math.PI / 180)) + y;\r\n      this.innerPoints.push(px, py);\r\n    }\r\n  }\r\n\r\n  renderDEPRECATED() {\r\n    this.generatePoints();\r\n    let size = this.size / 20 + this.size / 20 * Math.random();\r\n    let points = [];\r\n    for (let a = 0; a < this.circPos.length; a++) {\r\n      let x = size * Math.cos(this.circPos[a] * (Math.PI / 180)) + this.pos[0];\r\n      let y = size * Math.sin(this.circPos[a] * (Math.PI / 180)) + this.pos[1];\r\n      points.push([x, y]);\r\n      x = size * 5 / 8 * Math.cos(this.circPos[a] * (Math.PI / 180)) + this.pos[0];\r\n      y = size * 5 / 8 * Math.sin(this.circPos[a] * (Math.PI / 180)) + this.pos[1];\r\n      points.push([x, y]);\r\n    }\r\n\r\n    this.ctx.beginPath();\r\n    this.ctx.fillStyle = colours.rock_gray;\r\n    this.ctx.moveTo(points[0][0], points[0][1]);\r\n    for (let a = 2; a < points.length; a += 2)\r\n      this.ctx.lineTo(points[a][0], points[a][1]);\r\n    this.ctx.fill();\r\n\r\n    this.ctx.beginPath();\r\n    this.ctx.fillStyle = colours.gray;\r\n    this.ctx.moveTo(points[1][0], points[1][1]);\r\n    for (let a = 1; a < points.length; a += 2)\r\n      this.ctx.lineTo(points[a][0], points[a][1]);\r\n    this.ctx.fill();\r\n\r\n    for (let a = 0; a < points.length - 2; a += 2) {\r\n      this.drawLines(points[a], points[a + 1], points[a + 2], points[a + 3]);\r\n    }\r\n    this.drawLines(points[points.length - 2], points[points.length - 1], points[0], points[1]);\r\n  }\r\n\r\n  drawLines(a, b, c, d) {\r\n    this.ctx.beginPath();\r\n    this.ctx.strokeStyle = colours.dark_gray;\r\n    this.ctx.moveTo(a[0], a[1]);\r\n    this.ctx.lineTo(b[0], b[1]);\r\n    this.ctx.lineTo(d[0], d[1]);\r\n    this.ctx.lineTo(c[0], c[1]);\r\n    this.ctx.lineTo(a[0], a[1]);\r\n    this.ctx.stroke();\r\n  }\r\n\r\n}\r\n\r\nexport default Rock;\r\n","export let ocean_blue = '0x94D0FF',\r\ndeep_blue = 'rgba(135,149,232,0.7)',\r\npond_shadow = 'rgba(11, 45, 99, 0.7)',\r\nyellow = '0xfdf3b8',\r\norange_peel = '0xFCC08F',\r\nbark = '0x917e7e',\r\nkhaki = '0xF0E68C',\r\nolive = '0x808000',\r\nforest_green = '0x68BA71',\r\ndark_green = '0x388941',\r\npea = '0x60A568',\r\nyellow_green = '0xacff78',\r\nlight_green = '0x90ee90',\r\nlily_green = '0xB4E8AC',\r\npink = '0xFF6AD5',\r\nleaf_brown = '0xecb4bf',\r\ndelicate_pink = '0xFF9BE2',\r\nlight_pink = '0xFFBCEC',\r\npurple = '0x9370DB',\r\nindigo = '0x4B0082',\r\nregistration_black = '0x000000',\r\nrasin_black = '0x212121',\r\ndark_gray = '0x474747',\r\nrock_gray = '0x606060',\r\ngray = '0x808080';\r\n","// extracted by mini-css-extract-plugin","// The module cache\nvar __webpack_module_cache__ = {};\n\n// The require function\nfunction __webpack_require__(moduleId) {\n\t// Check if module is in cache\n\tvar cachedModule = __webpack_module_cache__[moduleId];\n\tif (cachedModule !== undefined) {\n\t\treturn cachedModule.exports;\n\t}\n\t// Create a new module (and put it into the cache)\n\tvar module = __webpack_module_cache__[moduleId] = {\n\t\t// no module.id needed\n\t\t// no module.loaded needed\n\t\texports: {}\n\t};\n\n\t// Execute the module function\n\t__webpack_modules__[moduleId](module, module.exports, __webpack_require__);\n\n\t// Return the exports of the module\n\treturn module.exports;\n}\n\n","/**\r\n * POND: This is the controller of the entire program, this is where\r\n * the program loop is run, containing: render, tick and resize.\r\n */\r\n import * as colours from './colours';\r\nimport Background from './background/background';\r\n// import Menu from './menu';\r\n//\r\n// import Tadpole from './creature/tadpole';\r\n// import Fish from './creature/fish';\r\n// import Lily from './creature/lily';\r\n//\r\n// import Water from './movement/water/water';\r\n// import Collisions from './movement/collisions';\r\n// import TadMovement from './movement/tadMovement';\r\n// import FishMovement from './movement/fishMovement';\r\n// import LilyMovement from './movement/lilyMovement';\r\n\r\n\r\nclass Pond {\r\n  constructor() {\r\n    this.canvas = new PIXI.Application({\r\n      resizeTo: window,\r\n      backgroundColor: colours.pea\r\n    });\r\n    document.body.appendChild(this.canvas.view);\r\n\r\n    this.init();\r\n\r\n    let elapsed = 0.0;\r\n    this.canvas.ticker.add((delta) => {\r\n      elapsed += delta\r\n    })\r\n    // this.water = new Water(canvas, ctx);\r\n    //\r\n    // this.eventListeners();\r\n  }\r\n\r\n  /**\r\n   * HTML canvas elements are initiated here and event listeners\r\n   * are created\r\n   */\r\n  eventListeners() {\r\n    this.menu = new Menu(this);\r\n    let mousemovecount = 0;\r\n    canvas.addEventListener(\"mousemove\", () => {\r\n      mousemovecount++;\r\n      if (mousemovecount % 4 == 0) {\r\n        this.water.dropAt(event.clientX, event.clientY);\r\n      }\r\n    });\r\n  }\r\n\r\n  /**\r\n   * All entities are added to their arrays and ther corresponding\r\n   * Movements are initiated\r\n   */\r\n  init() {\r\n    this.background = new Background(this.canvas);\r\n    // this.water.setBackground(this.background);\r\n    // let size = this.background.size;\r\n    //\r\n    // this.tadpoles = [];\r\n    // this.fish = [];\r\n    // this.lillies = [];\r\n    // this.movement = [];\r\n    //\r\n    // // Pushes all tadpoles to their array\r\n    // for (let i = 0; i < this.tadpoleSize; i++)\r\n    //   this.tadpoles.push(new Tadpole(canvas, size));\r\n    //\r\n    // // Pushes all fish and lillies to their arrays\r\n    // for (let i = 0; i < this.fishSize; i++)\r\n    //   this.fish.push(new Fish(canvas, ctx, size));\r\n    //\r\n    // for (let i = 0; i < this.lilySize; i++)\r\n    //   this.lillies.push(new Lily(canvas, size));\r\n    //\r\n    // // Sets movement patterns for all entities\r\n    // this.collisions = new Collisions(this.tadpoles, this.fish, this.lillies, this.background);\r\n    //\r\n    // this.movement.push(new TadMovement(this.tadpoles, canvas, this.collisions),\r\n    //   new FishMovement(this.fish, canvas, this.collisions),\r\n    //   new LilyMovement(this.lillies, canvas, this.collisions));\r\n  }\r\n\r\n  /**\r\n   * All tick functions are run for all the movements and for each\r\n   * entity\r\n   */\r\n  tick() {\r\n    this.movement.forEach((m) => m.move(this.water));\r\n    this.tadpoles.forEach((t) => t.tick());\r\n    this.fish.forEach((f) => f.tick());\r\n    this.water.tick();\r\n    this.lillies.forEach((l) => l.tick());\r\n  }\r\n\r\n  /**\r\n   * All render functions are run for all entities\r\n   */\r\n  render() {\r\n    // Clear screen\r\n    this.background.renderPond(canvas, ctx);\r\n\r\n    // Draw to canvas in order of layers\r\n    this.tadpoles.forEach((t) => t.render(canvas, ctx));\r\n    this.fish.forEach((f) => f.render(canvas, ctx));\r\n    this.water.render();\r\n    this.lillies.forEach((l) => l.render(canvas, ctx));\r\n\r\n    // Draw the land on the canvas\r\n    this.background.renderLand(canvas, ctx);\r\n  }\r\n\r\n}\r\n\r\nrequire('./mystyles.scss');\r\nlet pond = new Pond();\r\n"],"names":["colours","Background","app","pondColour","ocean_blue","landColour","pea","pointRange","buffer","window","innerWidth","randomPoints","i","x","Math","floor","random","y","innerHeight","push","edgeOfPondPoints","convexHull","createLand","points","sort","a","b","n","length","hull","j","removeMiddle","pop","c","cross","dot","pond","PIXI","Graphics","beginFill","pondShape","Polygon","drawPolygon","stage","addChild","grassCount","grass","contains","singleBlade","LongGrass","rockCount","rocks","rockCoords","edgeOfPond","rock","Rock","x1","y1","x2","y2","per","xA","yA","xB","yB","xDiff","yDiff","sqrt","amount","totalDistance","linesPerDistance","cur","getDistance","outputPoints","pointPos","pointLine","pointOnLine","console","log","Cattail","canvas","ctx","size","pos","stemLength","stemThickness","stemColour","dark_green","headLength","headThickness","headColour","olive","tipLength","tipThickness","tipColour","khaki","rotation","PI","save","translate","rotate","drawLine","restore","start","thickness","colour","beginPath","lineCap","strokeStyle","lineWidth","moveTo","lineTo","stroke","FlowerBush","s","flower","IrisEnsataVariegata","drawBush","setPos","render","w","h","fillStyle","forest_green","bezierCurveTo","fill","yellow_green","purple","drawPetal","indigo","yellow","drawInnerPetal","LobeliaCardinalis","position","set","angle","Container","Tree","drawTree","dx","dy","drawBranch","leaf_brown","drawSakuraLeaf","bark","generatePoints","rock_gray","outerPoints","rockshade","gray","innerPoints","pointCountAvg","circPos","nextPoint","px","cos","py","sin","drawLines","d","dark_gray","deep_blue","pond_shadow","orange_peel","light_green","lily_green","pink","delicate_pink","light_pink","registration_black","rasin_black","Pond","Application","resizeTo","backgroundColor","document","body","appendChild","view","init","elapsed","ticker","add","delta","menu","Menu","mousemovecount","addEventListener","water","dropAt","event","clientX","clientY","background","movement","forEach","m","move","tadpoles","t","tick","fish","f","lillies","l","renderPond","renderLand","require"],"sourceRoot":""}